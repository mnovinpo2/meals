plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// Fallback logic for flutterVersionCode and flutterVersionName
def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1").toInteger()
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.meals"
    compileSdk = flutter.compileSdkVersion ?: 34 // Use a default if undefined
    ndkVersion = flutter.ndkVersion ?: "25.2.9519653" // Use default NDK version

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17" // Matches Java 17
    }

    defaultConfig {
        applicationId "com.example.meals"
        minSdk = 23 // Minimum SDK version required
        targetSdk = flutter.targetSdkVersion ?: 34 // Use default if undefined
        versionCode = flutterVersionCode
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Replace with your own release signing config
        }
    }
}

flutter {
    source = "../.."
}
